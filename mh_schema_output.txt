SQL> 
SQL> --STUDENT_ID: 30281229
SQL> --STUDENT_NAME: DEEPALI VINAY
SQL> 
SQL> -- Generated by Oracle SQL Developer Data Modeler 18.4.0.339.1536
SQL> --   at:        2019-05-01 16:36:18 AEST
SQL> --   site:      Oracle Database 11g
SQL> --   type:      Oracle Database 11g
SQL> 
SQL> DROP SEQUENCE adm_adm_num_seq;

Error starting at line : 12 in command -
DROP SEQUENCE adm_adm_num_seq
Error report -
ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> DROP SEQUENCE adm_pro_adm_pro_num_seq;

Error starting at line : 14 in command -
DROP SEQUENCE adm_pro_adm_pro_num_seq
Error report -
ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> DROP SEQUENCE bed_ward_code_seq;

Error starting at line : 16 in command -
DROP SEQUENCE bed_ward_code_seq
Error report -
ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> DROP SEQUENCE cost_centre_cost_centre_code ;

Error starting at line : 18 in command -
DROP SEQUENCE cost_centre_cost_centre_code
Error report -
ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> DROP SEQUENCE doctor_doctor_id_seq;

Error starting at line : 20 in command -
DROP SEQUENCE doctor_doctor_id_seq
Error report -
ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> DROP SEQUENCE nurse_nurse_id_seq;

Error starting at line : 22 in command -
DROP SEQUENCE nurse_nurse_id_seq
Error report -
ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> DROP SEQUENCE patient_pat_id_seq;

Error starting at line : 24 in command -
DROP SEQUENCE patient_pat_id_seq
Error report -
ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> DROP SEQUENCE procedure_procedure_code_seq;

Error starting at line : 26 in command -
DROP SEQUENCE procedure_procedure_code_seq
Error report -
ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> DROP SEQUENCE ward_ward_code_seq;

Error starting at line : 28 in command -
DROP SEQUENCE ward_ward_code_seq
Error report -
ORA-02289: sequence does not exist
02289. 00000 -  "sequence does not exist"
*Cause:    The specified sequence does not exist, or the user does
           not have the required privilege to perform this operation.
*Action:   Make sure the sequence name is correct, and that you have
           the right to perform the desired operation on this sequence.
SQL> 
SQL> 
SQL> DROP TABLE adm CASCADE CONSTRAINTS;

Table ADM dropped.

SQL> 
SQL> DROP TABLE adm_pro CASCADE CONSTRAINTS;

Table ADM_PRO dropped.

SQL> 
SQL> DROP TABLE bed CASCADE CONSTRAINTS;

Table BED dropped.

SQL> 
SQL> DROP TABLE bed_assign CASCADE CONSTRAINTS;

Table BED_ASSIGN dropped.

SQL> 
SQL> DROP TABLE cost_centre CASCADE CONSTRAINTS;

Table COST_CENTRE dropped.

SQL> 
SQL> DROP TABLE doc_spec CASCADE CONSTRAINTS;

Table DOC_SPEC dropped.

SQL> 
SQL> DROP TABLE doctor CASCADE CONSTRAINTS;

Table DOCTOR dropped.

SQL> 
SQL> DROP TABLE item CASCADE CONSTRAINTS;

Table ITEM dropped.

SQL> 
SQL> DROP TABLE item_req CASCADE CONSTRAINTS;

Table ITEM_REQ dropped.

SQL> 
SQL> DROP TABLE nurse CASCADE CONSTRAINTS;

Table NURSE dropped.

SQL> 
SQL> DROP TABLE patient CASCADE CONSTRAINTS;

Table PATIENT dropped.

SQL> 
SQL> DROP TABLE procedure CASCADE CONSTRAINTS;

Table PROCEDURE dropped.

SQL> 
SQL> DROP TABLE spec CASCADE CONSTRAINTS;

Table SPEC dropped.

SQL> 
SQL> DROP TABLE ward CASCADE CONSTRAINTS;

Table WARD dropped.

SQL> 
SQL> DROP TABLE ward_assign CASCADE CONSTRAINTS;

Table WARD_ASSIGN dropped.

SQL> 
SQL> CREATE TABLE adm (
  2      adm_num               NUMBER(7) NOT NULL,
  3      pat_id                NUMBER(7) NOT NULL,
  4      adm_date_time         DATE NOT NULL,
  5      discharge_date_time   DATE,
  6      doctor_id             NUMBER(7) NOT NULL
  7  );

Table ADM created.

SQL> 
SQL> ALTER TABLE adm ADD CONSTRAINT "admission_num check" CHECK ( adm_num > 0 );

Table ADM altered.

SQL> 
SQL> COMMENT ON COLUMN adm.adm_num IS
  2      'Admission number-Surrogate key for admission entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm.pat_id IS
  2      'Patient ID - Primary key of PATIENT entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm.adm_date_time IS
  2      'Date and time of admission of a patient';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm.discharge_date_time IS
  2      'Date and time of discharge';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm.doctor_id IS
  2      'Doctor ID - Primary key of DOCTOR entity';

Comment created.

SQL> 
SQL> ALTER TABLE adm ADD CONSTRAINT adm_pk PRIMARY KEY ( adm_num );

Table ADM altered.

SQL> 
SQL> ALTER TABLE adm ADD CONSTRAINT adm_pat_id_adm_date_time_un UNIQUE ( pat_id,
  2                                                                      adm_date_time
  3                                                                      );

Table ADM altered.

SQL> 
SQL> CREATE TABLE adm_pro (
  2      adm_pro_num           NUMBER(7) NOT NULL,
  3      adm_num               NUMBER(7) NOT NULL,
  4      carr_out_on           DATE NOT NULL,
  5      procedure_charge      NUMBER(10, 2),
  6      total_extras_charge   NUMBER(10, 2),
  7      procedure_code        NUMBER(7) NOT NULL,
  8      doctor_id1            NUMBER(7) NOT NULL,
  9      doctor_id             NUMBER(7)
 10  );

Table ADM_PRO created.

SQL> 
SQL> ALTER TABLE adm_pro ADD CONSTRAINT "adm_pro_num check" CHECK ( adm_pro_num > 0 )
  2  
  3  ;

Table ADM_PRO altered.

SQL> 
SQL> COMMENT ON COLUMN adm_pro.adm_pro_num IS
  2      'Admission_Procedure_number-Surrogate key for adm-pro entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_pro.adm_num IS
  2      'Admission number-Surrogate key for admission entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_pro.carr_out_on IS
  2      'Carried out on - Date and time of procedure performed';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_pro.procedure_charge IS
  2      'Charge of procedure';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_pro.total_extras_charge IS
  2      'total charge of extra items';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_pro.procedure_code IS
  2      'Procedure code - Primary key';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_pro.doctor_id1 IS
  2      'Doctor ID - Primary key of DOCTOR entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN adm_pro.doctor_id IS
  2      'Doctor ID - Primary key of DOCTOR entity';

Comment created.

SQL> 
SQL> ALTER TABLE adm_pro ADD CONSTRAINT adm_pro_pk PRIMARY KEY ( adm_pro_num );

Table ADM_PRO altered.

SQL> 
SQL> ALTER TABLE adm_pro ADD CONSTRAINT adm_pro_carr_out_on_adm_num_un UNIQUE ( carr_out_on
  2  
  3  ,
  4                                                                             adm_num
  5                                                                             );

Table ADM_PRO altered.

SQL> 
SQL> CREATE TABLE bed (
  2      ward_code          NUMBER(7) NOT NULL,
  3      bed_number         NUMBER(7) NOT NULL,
  4      telephone_number   NUMBER(12),
  5      bed_type           VARCHAR2(20) NOT NULL
  6  );

Table BED created.

SQL> 
SQL> ALTER TABLE bed ADD CONSTRAINT "bed_number check" CHECK ( bed_number > 0 );

Table BED altered.

SQL> 
SQL> ALTER TABLE bed
  2      ADD CONSTRAINT "Type of bed" CHECK ( bed_type IN (
  3          'Adjustable',
  4          'Fixed'
  5      ) );

Table BED altered.

SQL> 
SQL> COMMENT ON COLUMN bed.ward_code IS
  2      'Ward code - Primary key';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN bed.bed_number IS
  2      'Bed number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN bed.telephone_number IS
  2      'Bedside telephone number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN bed.bed_type IS
  2      'Bed type';

Comment created.

SQL> 
SQL> ALTER TABLE bed ADD CONSTRAINT bed_pk PRIMARY KEY ( ward_code,
  2                                                      bed_number );

Table BED altered.

SQL> 
SQL> CREATE TABLE bed_assign (
  2      adm_num                    NUMBER(7) NOT NULL,
  3      bed_assignment_date_time   DATE NOT NULL,
  4      ward_code                  NUMBER(7) NOT NULL,
  5      bed_number                 NUMBER(7) NOT NULL
  6  );

Table BED_ASSIGN created.

SQL> 
SQL> COMMENT ON COLUMN bed_assign.adm_num IS
  2      'Admission number-Surrogate key for admission entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN bed_assign.bed_assignment_date_time IS
  2      'Bed assignment date and time';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN bed_assign.ward_code IS
  2      'Ward code - Primary key';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN bed_assign.bed_number IS
  2      'Bed number';

Comment created.

SQL> 
SQL> ALTER TABLE bed_assign ADD CONSTRAINT bed_assign_pk PRIMARY KEY ( bed_assignment_date_time
  2  ,
  3                                                                    adm_num );

Table BED_ASSIGN altered.

SQL> 
SQL> CREATE TABLE cost_centre (
  2      cost_centre_code    NUMBER(7) NOT NULL,
  3      cost_centre_title   VARCHAR2(50),
  4      manager_name        VARCHAR2(50)
  5  );

Table COST_CENTRE created.

SQL> 
SQL> ALTER TABLE cost_centre ADD CONSTRAINT cost_centre_code CHECK ( cost_centre_code
  2  
  3  > 0 );

Table COST_CENTRE altered.

SQL> 
SQL> COMMENT ON COLUMN cost_centre.cost_centre_code IS
  2      'Cost centre code - Primery key of the entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN cost_centre.cost_centre_title IS
  2      'Title of cost centre';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN cost_centre.manager_name IS
  2      'Name of manager';

Comment created.

SQL> 
SQL> ALTER TABLE cost_centre ADD CONSTRAINT cost_centre_pk PRIMARY KEY ( cost_centre_code
  2  );

Table COST_CENTRE altered.

SQL> 
SQL> CREATE TABLE doc_spec (
  2      doctor_id        NUMBER(7) NOT NULL,
  3      specialisation   VARCHAR2(50) NOT NULL
  4  );

Table DOC_SPEC created.

SQL> 
SQL> COMMENT ON COLUMN doc_spec.doctor_id IS
  2      'Doctor ID - Primary key of DOCTOR entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN doc_spec.specialisation IS
  2      'Specialisation type';

Comment created.

SQL> 
SQL> ALTER TABLE doc_spec ADD CONSTRAINT doc_spec_pk PRIMARY KEY ( doctor_id,
  2                                                                specialisation );

Table DOC_SPEC altered.

SQL> 
SQL> CREATE TABLE doctor (
  2      doctor_id             NUMBER(7) NOT NULL,
  3      doctor_first_name     VARCHAR2(50) NOT NULL,
  4      doctor_last_name      VARCHAR2(50) NOT NULL,
  5      doctor_phone_number   NUMBER(12) NOT NULL
  6  );

Table DOCTOR created.

SQL> 
SQL> ALTER TABLE doctor ADD CONSTRAINT "doctor_id check" CHECK ( doctor_id > 0 );

Table DOCTOR altered.

SQL> 
SQL> COMMENT ON COLUMN doctor.doctor_id IS
  2      'Doctor ID - Primary key of DOCTOR entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN doctor.doctor_first_name IS
  2      'Doctor''s first name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN doctor.doctor_last_name IS
  2      'Doctor''s last name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN doctor.doctor_phone_number IS
  2      'Doctor''s phone number';

Comment created.

SQL> 
SQL> ALTER TABLE doctor ADD CONSTRAINT doctor_pk PRIMARY KEY ( doctor_id );

Table DOCTOR altered.

SQL> 
SQL> CREATE TABLE item (
  2      item_code          VARCHAR2(10) NOT NULL,
  3      item_description   VARCHAR2(50) NOT NULL,
  4      current_stock      NUMBER(20) NOT NULL,
  5      price              NUMBER(10, 2) NOT NULL,
  6      cost_centre_code   NUMBER(7) NOT NULL
  7  );

Table ITEM created.

SQL> 
SQL> COMMENT ON COLUMN item.item_code IS
  2      'Item code - Primary key of ITEM entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN item.item_description IS
  2      'Description of item';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN item.current_stock IS
  2      'Current available stock of item';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN item.price IS
  2      'Price of item';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN item.cost_centre_code IS
  2      'Cost centre code - Primery key of the entity';

Comment created.

SQL> 
SQL> ALTER TABLE item ADD CONSTRAINT item_pk PRIMARY KEY ( item_code );

Table ITEM altered.

SQL> 
SQL> CREATE TABLE item_req (
  2      item_code           VARCHAR2(10) NOT NULL,
  3      adm_pro_num         NUMBER(7) NOT NULL,
  4      quantity            NUMBER(10),
  5      total_item_charge   NUMBER(10, 2)
  6  );

Table ITEM_REQ created.

SQL> 
SQL> COMMENT ON COLUMN item_req.item_code IS
  2      'Item code - Primary key of ITEM entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN item_req.adm_pro_num IS
  2      'Admission_Procedure_number-Surrogate key for adm-pro entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN item_req.quantity IS
  2      'Quantity of item used';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN item_req.total_item_charge IS
  2      'Charge of each type of item used';

Comment created.

SQL> 
SQL> ALTER TABLE item_req ADD CONSTRAINT item_req_pk PRIMARY KEY ( item_code,
  2                                                                adm_pro_num );

Table ITEM_REQ altered.

SQL> 
SQL> CREATE TABLE nurse (
  2      nurse_id          NUMBER(7) NOT NULL,
  3      nurse_firstname   VARCHAR2(50) NOT NULL,
  4      nurse_lastname    VARCHAR2(50) NOT NULL,
  5      nurse_contact     NUMBER(12) NOT NULL,
  6      nurse_certified   CHAR(3) NOT NULL
  7  );

Table NURSE created.

SQL> 
SQL> ALTER TABLE nurse ADD CONSTRAINT "nurse_id check" CHECK ( nurse_id > 0 );

Table NURSE altered.

SQL> 
SQL> ALTER TABLE nurse
  2      ADD CONSTRAINT "Nurse Certification" CHECK ( nurse_certified IN (
  3          'No',
  4          'Yes'
  5      ) );

Table NURSE altered.

SQL> 
SQL> COMMENT ON COLUMN nurse.nurse_id IS
  2      'Nurse ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN nurse.nurse_firstname IS
  2      'Nurse''s first name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN nurse.nurse_lastname IS
  2      'Nurse''s last name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN nurse.nurse_contact IS
  2      'Nurse''s contact number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN nurse.nurse_certified IS
  2      'Nurse certified for work with children';

Comment created.

SQL> 
SQL> ALTER TABLE nurse ADD CONSTRAINT nurse_pk PRIMARY KEY ( nurse_id );

Table NURSE altered.

SQL> 
SQL> CREATE TABLE patient (
  2      pat_id                  NUMBER(7) NOT NULL,
  3      patient_first_name      VARCHAR2(50) NOT NULL,
  4      patient_last_name       VARCHAR2(50) NOT NULL,
  5      patient_address         VARCHAR2(50),
  6      date_of_birth           DATE NOT NULL,
  7      emergency_contact_num   NUMBER(12) NOT NULL
  8  );

Table PATIENT created.

SQL> 
SQL> ALTER TABLE patient ADD CONSTRAINT "patient_id check" CHECK ( pat_id > 0 );

Table PATIENT altered.

SQL> 
SQL> COMMENT ON COLUMN patient.pat_id IS
  2      'Patient ID - Primary key of PATIENT entity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN patient.patient_first_name IS
  2      'Patient''s first name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN patient.patient_last_name IS
  2      'Patient''s last name';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN patient.patient_address IS
  2      'Patient''s address';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN patient.date_of_birth IS
  2      'Patient''s date of birth';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN patient.emergency_contact_num IS
  2      'Patient''s emergency contact number';

Comment created.

SQL> 
SQL> ALTER TABLE patient ADD CONSTRAINT patient_pk PRIMARY KEY ( pat_id );

Table PATIENT altered.

SQL> 
SQL> CREATE TABLE procedure (
  2      procedure_code          NUMBER(7) NOT NULL,
  3      procedure_name          VARCHAR2(50) NOT NULL,
  4      procedure_description   VARCHAR2(50),
  5      time_required           DATE NOT NULL
  6  );

Table PROCEDURE created.

SQL> 
SQL> ALTER TABLE procedure ADD CONSTRAINT "procedure_code check" CHECK ( procedure_code
  2  
  3  > 0 );

Table PROCEDURE altered.

SQL> 
SQL> COMMENT ON COLUMN procedure.procedure_code IS
  2      'Procedure code - Primary key';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN procedure.procedure_name IS
  2      'Name of Procedure';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN procedure.procedure_description IS
  2      'Description of procedure';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN procedure.time_required IS
  2      'Duration of procedure';

Comment created.

SQL> 
SQL> ALTER TABLE procedure ADD CONSTRAINT procedure_pk PRIMARY KEY ( procedure_code );

Table PROCEDURE altered.

SQL> 
SQL> CREATE TABLE spec (
  2      specialisation VARCHAR2(50) NOT NULL
  3  );

Table SPEC created.

SQL> 
SQL> COMMENT ON COLUMN spec.specialisation IS
  2      'Specialisation type';

Comment created.

SQL> 
SQL> ALTER TABLE spec ADD CONSTRAINT spec_pk PRIMARY KEY ( specialisation );

Table SPEC altered.

SQL> 
SQL> CREATE TABLE ward (
  2      ward_code        NUMBER(7) NOT NULL,
  3      ward_name        VARCHAR2(50) NOT NULL,
  4      total_bed_num    NUMBER(10) NOT NULL,
  5      available_beds   NUMBER(10) NOT NULL
  6  );

Table WARD created.

SQL> 
SQL> ALTER TABLE ward ADD CONSTRAINT "ward_code check" CHECK ( ward_code > 0 );

Table WARD altered.

SQL> 
SQL> COMMENT ON COLUMN ward.ward_code IS
  2      'Ward code - Primary key';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ward.ward_name IS
  2      'Name of ward';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ward.total_bed_num IS
  2      'Total number of beds';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ward.available_beds IS
  2      'Number of beds available';

Comment created.

SQL> 
SQL> ALTER TABLE ward ADD CONSTRAINT ward_pk PRIMARY KEY ( ward_code );

Table WARD altered.

SQL> 
SQL> CREATE TABLE ward_assign (
  2      nurse_id              NUMBER(7) NOT NULL,
  3      ward_assigned_date    DATE NOT NULL,
  4      ward_date_completed   DATE NOT NULL,
  5      ward_code             NUMBER(7) NOT NULL
  6  );

Table WARD_ASSIGN created.

SQL> 
SQL> COMMENT ON COLUMN ward_assign.nurse_id IS
  2      'Nurse ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ward_assign.ward_assigned_date IS
  2      'Assignment date of ward';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ward_assign.ward_date_completed IS
  2      'Completion date of ward assignment';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN ward_assign.ward_code IS
  2      'Ward code - Primary key';

Comment created.

SQL> 
SQL> ALTER TABLE ward_assign ADD CONSTRAINT ward_assign_pk PRIMARY KEY ( nurse_id,
  2                                                                      ward_assigned_date
  3                                                                      );

Table WARD_ASSIGN altered.

SQL> 
SQL> ALTER TABLE adm
  2      ADD CONSTRAINT adm_doctor_fk FOREIGN KEY ( doctor_id )
  3          REFERENCES doctor ( doctor_id );

Table ADM altered.

SQL> 
SQL> ALTER TABLE adm
  2      ADD CONSTRAINT adm_patient_fk FOREIGN KEY ( pat_id )
  3          REFERENCES patient ( pat_id );

Table ADM altered.

SQL> 
SQL> ALTER TABLE adm_pro
  2      ADD CONSTRAINT adm_pro_adm_fk FOREIGN KEY ( adm_num )
  3          REFERENCES adm ( adm_num );

Table ADM_PRO altered.

SQL> 
SQL> ALTER TABLE adm_pro
  2      ADD CONSTRAINT adm_pro_doctor_fk FOREIGN KEY ( doctor_id )
  3          REFERENCES doctor ( doctor_id );

Table ADM_PRO altered.

SQL> 
SQL> ALTER TABLE adm_pro
  2      ADD CONSTRAINT adm_pro_doctor_fkv2 FOREIGN KEY ( doctor_id1 )
  3          REFERENCES doctor ( doctor_id );

Table ADM_PRO altered.

SQL> 
SQL> ALTER TABLE adm_pro
  2      ADD CONSTRAINT adm_pro_procedure_fk FOREIGN KEY ( procedure_code )
  3          REFERENCES procedure ( procedure_code );

Table ADM_PRO altered.

SQL> 
SQL> ALTER TABLE bed_assign
  2      ADD CONSTRAINT bed_assign_adm_fk FOREIGN KEY ( adm_num )
  3          REFERENCES adm ( adm_num );

Table BED_ASSIGN altered.

SQL> 
SQL> ALTER TABLE bed_assign
  2      ADD CONSTRAINT bed_assign_bed_fk FOREIGN KEY ( ward_code,
  3                                                     bed_number )
  4          REFERENCES bed ( ward_code,
  5                           bed_number );

Table BED_ASSIGN altered.

SQL> 
SQL> ALTER TABLE bed
  2      ADD CONSTRAINT bed_ward_fk FOREIGN KEY ( ward_code )
  3          REFERENCES ward ( ward_code );

Table BED altered.

SQL> 
SQL> ALTER TABLE doc_spec
  2      ADD CONSTRAINT doc_spec_doctor_fk FOREIGN KEY ( doctor_id )
  3          REFERENCES doctor ( doctor_id );

Table DOC_SPEC altered.

SQL> 
SQL> ALTER TABLE doc_spec
  2      ADD CONSTRAINT doc_spec_spec_fk FOREIGN KEY ( specialisation )
  3          REFERENCES spec ( specialisation );

Table DOC_SPEC altered.

SQL> 
SQL> ALTER TABLE item
  2      ADD CONSTRAINT item_cost_centre_fk FOREIGN KEY ( cost_centre_code )
  3          REFERENCES cost_centre ( cost_centre_code );

Table ITEM altered.

SQL> 
SQL> ALTER TABLE item_req
  2      ADD CONSTRAINT item_req_adm_pro_fk FOREIGN KEY ( adm_pro_num )
  3          REFERENCES adm_pro ( adm_pro_num );

Table ITEM_REQ altered.

SQL> 
SQL> ALTER TABLE item_req
  2      ADD CONSTRAINT item_req_item_fk FOREIGN KEY ( item_code )
  3          REFERENCES item ( item_code );

Table ITEM_REQ altered.

SQL> 
SQL> ALTER TABLE ward_assign
  2      ADD CONSTRAINT ward_assign_nurse_fk FOREIGN KEY ( nurse_id )
  3          REFERENCES nurse ( nurse_id );

Table WARD_ASSIGN altered.

SQL> 
SQL> ALTER TABLE ward_assign
  2      ADD CONSTRAINT ward_assign_ward_fk FOREIGN KEY ( ward_code )
  3          REFERENCES ward ( ward_code );

Table WARD_ASSIGN altered.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            15
SQL> -- CREATE INDEX                             0
SQL> -- ALTER TABLE                             44
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          9
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> SET ECHO OFF
